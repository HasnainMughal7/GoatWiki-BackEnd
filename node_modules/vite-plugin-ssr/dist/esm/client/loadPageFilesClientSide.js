import { getPageFilesClientSide, getExports } from '../shared/getPageFiles';
import { findPageConfig } from '../shared/page-configs/findPageConfig';
import { loadPageCode } from '../shared/page-configs/loadPageCode';
export { loadPageFilesClientSide };
export { isErrorFetchingStaticAssets };
const stamp = '__whileFetchingAssets';
async function loadPageFilesClientSide(pageFilesAll, pageConfigs, pageId) {
    const pageFilesClientSide = getPageFilesClientSide(pageFilesAll, pageId);
    const pageConfig = findPageConfig(pageConfigs, pageId);
    let pageConfigLoaded;
    try {
        // prettier-ignore
        const result = await Promise.all([
            pageConfig && loadPageCode(pageConfig, import.meta.env.DEV),
            ...pageFilesClientSide.map((p) => { var _a; return (_a = p.loadFile) === null || _a === void 0 ? void 0 : _a.call(p); }),
        ]);
        pageConfigLoaded = result[0];
    }
    catch (err) {
        if (err) {
            Object.assign(err, { [stamp]: true });
        }
        throw err;
    }
    const { exports, exportsAll, pageExports } = getExports(pageFilesClientSide, pageConfigLoaded);
    const pageContextAddendum = {
        exports,
        exportsAll,
        pageExports,
        _pageFilesLoaded: pageFilesClientSide
    };
    return pageContextAddendum;
}
function isErrorFetchingStaticAssets(err) {
    if (!err) {
        return false;
    }
    return err[stamp] === true;
}
